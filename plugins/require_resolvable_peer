#!perl -w

=head1 NAME

require_resolvable_peer

=head1 SYNOPSIS

This plugin checks that the connecting host has some form of rDNS, and
rejects mail from those that don't.

Relayclients are of course excepted from this check.

=head1 CONFIG

The following parameters can be passed to require_resolvable_peer:

=over 4

=item allow

Causes the plugin to allow the mail but to add a header which can be used for spam scoring.

=item disconnect

Causes the plugin to disconnect after denying.

=item on_connect

As a second parameter following 'disconnect', causes the plugin to
disconnect immediately upon connection rather than waiting until RCPT.

This can reduce the number of hosts making AUTH attempts (which precedes
RCPT) at the cost of not allowing genuine AUTH connections without rDNS.

=back

=head1 AUTHOR

Copyright 2005,2012,2023 Nick Leverton <nick@leverton.org>

This software is free software and may be distributed under the same
terms as qpsmtpd itself.

=cut


my $VERSION = 0.04;

use constant PLUGIN => '_require_resolvable_peer';

sub register {
  my ($self, $qp, $denial, $on_connect ) = @_;
  if ( defined $denial and $denial =~ /^disconnect$/i ) {
    $self->{PLUGIN}->{DENY} = DENYSOFT_DISCONNECT;
  }
  elsif ( defined $denial and $denial =~ /^allow$/i ) {
    $self->{PLUGIN}->{DENY} = DECLINED;
  }
  else {
    $self->{PLUGIN}->{DENY} = DENYSOFT;
  }
  if (defined $on_connect && $on_connect =~ /on_connect/i) {
    $self->{PLUGIN}->{ONCONNECT} = 1;
  }

}

sub hook_connect {
  my ($self, $transaction) = @_;
  my $connection = $self->qp->connection;

  return (DECLINED)
    if $connection->relay_client or $connection->notes('whitelisthost');

  # Check that they have an rDNS
  my $remote_host = $connection->remote_host();
  if ($remote_host && $remote_host eq 'Unknown')
  {
    my $msg = "unresolvable host: ".$connection->remote_ip;
    if (exists $self->{PLUGIN}->{ONCONNECT} ) {
      $self->log(LOGNOTICE, $msg);
      return ($self->{PLUGIN}->{DENY}, "Rejecting connection from $msg");
    }
    $connection->notes(PLUGIN, $msg);
  }

  return (DECLINED);
}

sub hook_rcpt {
  my ($self, $transaction, $recipient) = @_;
  my $connection = $self->qp->connection;

  if (my $msg = $connection->notes(PLUGIN)) {
    $self->log(LOGNOTICE, $msg);
    return ($self->{PLUGIN}->{DENY}, "Rejecting mail from $msg");
  }

  return (DECLINED);
}

sub hook_data_post {
  my ($self, $transaction) = @_;
  my $connection = $self->qp->connection;

  if (my $msg = $connection->notes(PLUGIN)) {
    $transaction->header->add('X-Local-Spamcheck' => $msg);
  }

  return (DECLINED);
}
